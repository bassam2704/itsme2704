//
CHEMIST QUESTION
You have been hired as a software consultant at a chemist. The chemist shop sells various types of compounds and mixture to their customers. They have a research team that put together various formulas for the chemist of sell. The owner of the shop is a bit of stickler for cleanliness and is also afraid of unforeseen reactions when creating the compounds. So,she has created a rule where a new mixing can is to used for creating a new compound (whether the compound is made of the base elements or from another set of pre-made compounds). Your job as a consultant is to determine the minimal number of bowls that are required to make them. Any compound/element that is part of a definition, without its own definition can be assumed to be a base element. base elements don’t need any preparation.


Multiline input. Where first line N specifies the number of compound definitions followed by N definitions. Followed. Followed by integer M specifies the number of compounds to prepare and M compounds to prepare.


Calculate the minimum number of bowls required to prepared the given compounds.


Test case 1


Input
2
H2O = H + O
NaCL= Na + CL
1
NaCL
Output
1

Test case 2
Input 
2
H2O = H + O
NaCL= Na + CL
2
NaCL
NaCL
Output
1
Test case 3
Input 
4
H2O = H + O
NaCL = Na + CL
H2SO4 = H2O + S03
S03 = S + O
1
H2SO4


Output
3
///



Solution

import java.util.*;

public class Main
{  
    static int count=0;
    static boolean recursion(String n,List <String> left,List<String> right){
        if(!left.contains(n)){
            return false;
        }
        
        if(left.contains(n)){
            count++;
            System.out.println("Con "+n);
            String rightsplit[]=right.get(left.indexOf(n)).split("\\+");
            for(int i=0;i<rightsplit.length;i++){
                recursion(rightsplit[i],left,right);
            }
        }
        
        return false;
    }
    
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		sc.nextLine();
		ArrayList <String> left=new ArrayList<>();
		ArrayList <String> right=new ArrayList<>();
		ArrayList<String> userneed=new ArrayList<>();
		for(int i=0;i<n;i++){
		    String chem=sc.nextLine().replaceAll("\\s+","");
		    String ch[]=chem.split("=");
		    left.add(ch[0]);
		    right.add(ch[1]);
		}
		int need=sc.nextInt();
		sc.nextLine();
		for(int i=0;i<need;i++){
		    String needchem=sc.nextLine();
		    if ( !userneed.contains(needchem) ){
		        userneed.add(needchem);
		        recursion(needchem,left,right);
		    }
		}
		
	    System.out.println(count);
	}
}
